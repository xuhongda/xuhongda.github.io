<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[DUBBO浅析与手记]]></title>
    <url>%2Fsweetboy%2Ff0920783%2F</url>
    <content type="text"><![CDATA[本文将适当的介绍 什么是dubbo（what） 何时该使用dubbo(why) dubbo的原理(how) dubbo源码的简单分析(think) 什么是dubbo dubbo?阿里巴巴淘宝团队荣誉出品，早期担当阿里rpc(远程调用工具)，在githup（一代码托管网站）上有迹可查的最早发行版本是on 27 Oct 2011，据悉阿里内部已弃用dubbo改用HSF(俗称好舒服）。同时，提供与其类似服务的有Spring Cloud 当然后者提供的是一套完整微服务解决方案。 这张图片为我们展示了dubbo的架构所以，dubbo就是阿里员工写的一堆java代码。 起什么作用 提供服务的 输入与输出，阿里推荐其与spring整合，推荐zookeeper作为它的注册中心。那么服务又从何谈起了，让我们来回顾互联网架构的发展历程 架构的发展历程（摘自阿里） 背景 随着互联网的发展，网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行，亟需一个治理系统确保架构有条不紊的演进。 单一应用架构 当网站流量很小时，只需一个应用，将所有功能都部署在一起，以减少部署节点和成本。此时，用于简化增删改查工作量的数据访问框架(ORM)是关键。 垂直应用架构当访问量逐渐增大，单一应用增加机器带来的加速度越来越小，将应用拆成互不相干的几个应用，以提升效率。此时，用于加速前端页面开发的Web框架(MVC)是关键。 分布式服务架构当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求。此时，用于提高业务复用及整合的分布式服务框架(RPC)是关键。 流动计算架构当服务越来越多，容量的评估，小服务资源的浪费等问题逐渐显现，此时需增加一个调度中心基于访问压力实时管理集群容量，提高集群利用率。此时，用于提高机器利用率的资源调度和治理中心(SOA)是关键。 何时使用何时使用分布式架构，当你的项目功能较为丰富且需要随着时间和业务的发展需求不断变更时，分布式架构或者说微服务当时不二之选。但是，由于不同的功能拆分成了一个个相对独立的服务这使得对工程项目的问题发现与治疗都将变得困难起来。当然，它也带来了一系列的优点，因为不同功能我们封装成了一个个服务，这使得我们在更改一些功能模块时不需要重启整个项目工程，同时，因为不同模块间是依靠通讯协议来实现一种联系依赖，所以，我们不同的模块可以选择最适合的编程语言来服务业务。如此，我们可知，当你需要一个看起来炫酷且可靠服务于海量用户的项目微服务将是不二之选，当你只需要一个功能简单，用户数并不是很庞大的服务时，简单的垂直架构更能帮助我们专注于业务的编写，而大大降低了对运维的需求。 如何使用这里不进行介绍，你可以参考管网。官方为我们提供了xml配置，属性配置，API配置，注解等配置方法 链接 dubbo的运转机制dubbo架构 节点 角色说明 Provider 暴露服务的服务提供方 Consumer 调用远程服务的服务消费方 Registry 服务注册与发现的注册中心 Monitor 统计服务的调用次数和调用时间的监控中心 Container 服务运行容器 调用关系说明 服务容器负责启动，加载，运行服务提供者。 服务提供者在启动时，向注册中心注册自己提供的服务。 服务消费者在启动时，向注册中心订阅自己所需的服务。 注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。 服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。 服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。 Dubbo 架构具有以下几个特点，分别是连通性、健壮性、伸缩性、以及向未来架构的升级性。连通性 注册中心负责服务地址的注册与查找，相当于目录服务，服务提供者和消费者只在启动时与注册中心交互，注册中心不转发请求，压力较小 监控中心负责统计各服务调用次数，调用时间等，统计先在内存汇总后每分钟一次发送到监控中心服务器，并以报表展示 服务提供者向注册中心注册其提供的服务，并汇报调用时间到监控中心，此时间不包含网络开销 服务消费者向注册中心获取服务提供者地址列表，并根据负载算法直接调用提供者，同时汇报调用时间到监控中心，此时间包含网络开销 注册中心，服务提供者，服务消费者三者之间均为长连接，监控中心除外 注册中心通过长连接感知服务提供者的存在，服务提供者宕机，注册中心将立即推送事件通知消费者 注册中心和监控中心全部宕机，不影响已运行的提供者和消费者，消费者在本地缓存了提供者列表 注册中心和监控中心都是可选的，服务消费者可以直连服务提供者 健状性 监控中心宕掉不影响使用，只是丢失部分采样数据 数据库宕掉后，注册中心仍能通过缓存提供服务列表查询，但不能注册新服务 注册中心对等集群，任意一台宕掉后，将自动切换到另一台 注册中心全部宕掉后，服务提供者和服务消费者仍能通过本地缓存通讯 服务提供者无状态，任意一台宕掉后，不影响使用 服务提供者全部宕掉后，服务消费者应用将无法使用，并无限次重连等待服务提供者恢复 伸缩性 注册中心为对等集群，可动态增加机器部署实例，所有客户端将自动发现新的注册中心 服务提供者无状态，可动态增加机器部署实例，注册中心将推送新的服务提供者信息给消费者 升级性当服务集群规模进一步扩大，带动IT治理结构进一步升级，需要实现动态部署，进行流动计算，现有分布式服务架构不会带来阻力。下图是未来可能的一种架构： dubbo-architucture-futures节点角色说明 节点 角色说明 Deployer 自动部署服务的本地代理 Repository 仓库用于存储服务应用发布包 Scheduler 调度中心基于访问压力自动增减服务提供者 Admin 统一管理控制台 Registry 服务注册与发现的注册中心 Monitor 统计服务的调用次数和调用时间的监控中心 dubbo代码分析分享链接]]></content>
      <tags>
        <tag>架构</tag>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开始写文章]]></title>
    <url>%2Fsweetboy%2F1abae1c9%2F</url>
    <content type="text"><![CDATA[事实证明，还是会有些人访问这个站点的，所以决定还是要写些东西。 技术 技术部分的文章可能会以电子科技信息技术为主，写法可能更希望能够串联各个知识点， 由表象到底层,大概如此。一些语言的基础，操作系统，框架，架构方面。 随笔 其它的可能就是想写啥就写啥了，当个记录，可能会有很多不成熟的一面 今日写下此文，是为督促自己，白纸黑字，不可抵赖😂]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[finenote]]></title>
    <url>%2Fsweetboy%2Fe05dcc7c%2F</url>
    <content type="text"><![CDATA[#iii{ margin-left: auto; margin-right: auto; height:80px; border:0px solid #B0C4DE; } $("#iii").click(function(){ alert("欢迎访问😀这是我们的logo") }) &nbsp;联系我&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;统一鸣谢 $("#thanks").click(function(){ alert("需要感谢：GitHub 微博 DaoVoice 以及为本站提供建议的小伙伴们👍") })]]></content>
  </entry>
  <entry>
    <title><![CDATA[测试二：最终测试-视频-音乐]]></title>
    <url>%2Fsweetboy%2Fa422474b%2F</url>
    <content type="text"><![CDATA[&nbsp;关于作者 &nbsp;&nbsp;&nbsp;返回首页 sorry 😭由于引用了服务器字体可能导致了字数统计功能失效 基本完成 &nbsp;&nbsp; 通过不断地查阅各种资料，这个站点的各个功能算是基本搭建好了。但是仍然有许多不够完美的地方，尤其是在移动端方面，一些侧边栏的功能直接在手机端无法显示。如果今后发现有趣，有用的功能还是会第一时间添加进去的。大家可以广泛的给我留言，写下你们宝贵的建议。 这次测试的目的 &nbsp;&nbsp;这次主要是为了测试部署的这些功能，以及视频和音乐的外链。ok,下面就开始测试。。。 预告&nbsp;&nbsp;桌面端与手机端的兼容适配仍然是个问题。如果你用的是桌面端访问的本页的话，那么一切看起来是正常的。 &nbsp;&nbsp;但是，如果你正在用手机浏览本页面，以下嵌入的几个视频可能都无法观看。其中某些浏览器还会遇到样式显示问题，如何解决这些问题，这是我接下来努力的方向， &nbsp;&nbsp;打造一个视觉舒适，功能可靠页面需要花费不少时间，为此我专门研究了各种字体以及图片视频格式问题。但是，因为时间原因很多东西还未来的及加入到页面中来。 今后，这个站点finenote.cn希望能够长久的运行下去。记住站点结尾是.cn不是.com。 测试视频 优酷&amp;爱奇艺&nbsp;&nbsp;bilibili&nbsp;&nbsp;b站的外链分享都无法很好的支持移动端，所以取消了b站的分享。以下视频采用优酷和爱奇艺测试。优酷&nbsp;&nbsp;一个偶然看到的视频，尼康百年。。。背景音乐不错 爱奇艺&nbsp;&nbsp;随便一个视频 测试音乐 网易云&nbsp;&nbsp;这几年版权问题逐渐得到重视，发现需要付费下载得歌曲，基本无法分享外链。这样大多外文歌曲是无法直接贴出来了。保护版权答案 她的睫毛 var ap = new APlayer({ element: document.getElementById("aplayer0"), narrow: false, autoplay: false, showlrc: 0, music: { title: "她的睫毛", author: "周杰伦", url: "http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3", pic: "http://home.ustc.edu.cn/~mmmwhy/jay.jpg", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 结束&nbsp;&nbsp;最后希望大家，能够点击右下角的绿色按钮，给我发送消息。因为我想看到这消息组件的推送方式。&nbsp;&nbsp;经过一些测试发现在移动端上，点击发送消息按钮失效。🎯&nbsp;&nbsp;还有就是欢迎大家在下方的评论区留言，评论功能的效果我也是很期待的。]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>测试</tag>
        <tag>完结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[测试blog]]></title>
    <url>%2Fsweetboy%2Ff566646a%2F</url>
    <content type="text"><![CDATA[这是一个测试&nbsp;&nbsp;这是一个测试，但这不是我的第一次测试了。前面用的MarkDown编辑器，写完后上传中文都乱码了。这次使用有道云笔记，希望不要再出现问题。 为什么写&nbsp;&nbsp;最大的原因就是为了记录，记录一些自己的感想———关于知识，自己想到的，看到的，大概就是随便写写。 最后&nbsp;&nbsp;容我测试下插入图片]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
</search>
